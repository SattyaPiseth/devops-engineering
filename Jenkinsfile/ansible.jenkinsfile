pipeline {
    agent any
    environment {
        // Define environment variables
        EXTERNAL_PORT = '9000'
        INTERNAL_PORT = '80'
        DOCKER_IMAGE = 'pisethsattya/jobquick-jenkins:1.0'
        CONTAINER_NAME = 'jobfinder'
        ANSIBLE_PLAYBOOK = 'ansible/deploy.yml'
        ANSIBLE_HOSTS = 'ansible/hosts.ini'
        DOMAIN_NAME = 'ansible.techinsights.guru'
    }

    stages {
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Git Clone') {
            steps {
                git branch: 'main', url: 'https://github.com/SattyaPiseth/devops-engineering.git'
            }
        }
        stage('Check Location pwd') {
            steps {
                sh '''
                ls -lrt
                pwd
                ls /var/jenkins_home/workspace/ansible/test-ansible/shellscript/*
                '''
            }
        }
        stage('Check Ansible Version') {
            steps {
                script {
                    sh '''
                    ansible --version
                    ansible -i ansible/hosts.ini all -m ping
                    '''
                }
            }
        }
        stage('Check Docker Installation') {
            steps {
                script {
                    def dockerInstalled = sh(
                        script: "which docker",
                        returnStatus: true
                    )
                    if (dockerInstalled == 0) {
                        echo 'Docker is already installed on this node. Skipping Docker installation.'
                        currentBuild.result = 'SUCCESS'
                    } else {
                        echo 'Docker is not installed. Proceeding to installation...'
                        currentBuild.result = 'UNSTABLE'
                    }
                }
            }
        }
        stage('Install Docker') {
            when {
                expression {
                    return sh(script: "which docker", returnStatus: true) != 0
                }
            }
            steps {
                script {
                    echo 'Running Ansible playbook to install Docker...'
                    sh """
                        ansible-playbook -i ${ANSIBLE_HOSTS} ${ANSIBLE_PLAYBOOK}
                    """
                }
            }
        }
        // stage('Deploy with Ansible') {
        //     steps {
        //         script {
        //             // Run the Ansible playbook to deploy the Docker container
        //             sh """
        //             ansible-playbook -i ${ANSIBLE_HOSTS} ${ANSIBLE_PLAYBOOK} \
        //             -e "external_port=${EXTERNAL_PORT}" \
        //             -e "internal_port=${INTERNAL_PORT}" \
        //             -e "docker_image=${DOCKER_IMAGE}" \
        //             -e "container_name=${CONTAINER_NAME}" \
        //             -e "domain_name=${DOMAIN_NAME}"
        //             """
        //         }
        //     }
        // }
    }
    post {
        always {
            echo 'Pipeline execution completed.'
        }
    }
}
